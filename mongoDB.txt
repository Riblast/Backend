use ecommerce
switched to db ecommerce

ecommerce> db.mensajes.insertMany([{user: "Juanja@gmail.com", message: "Hola!!"}, {user: "marthagonzalez3@hotmail.com", message: "Hola Juan!"}, {user: "martina1524@gmail.com", message: "C칩mo est치n chicos?"}, {user: "PedroAB43@gmail.com", message: "Buenasss"}, {user: "marthagonzales3@hotmail.com", message: "yo bien de bien"}, {user: "Juanja@gmail.com", message: "bien, terminando un trabajo, vos?"}, {user: "martina1524@gmail.com", message: "me alegro!, yo estoy media estresada con los examenes"}, {user: "PedroAB43@gmail.com", message: "son muy complicados?"}, {user: "marthagonzales30@hotmail.com", message: "te va a ir bien, ya vas a ver!"}, {user: "Juanja@gmail.com", message: "Suerte!!"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("63ac73c88a5d7ef9c4cbc7a6"),
    '1': ObjectId("63ac73c88a5d7ef9c4cbc7a7"),
    '2': ObjectId("63ac73c88a5d7ef9c4cbc7a8"),
    '3': ObjectId("63ac73c88a5d7ef9c4cbc7a9"),
    '4': ObjectId("63ac73c88a5d7ef9c4cbc7aa"),
    '5': ObjectId("63ac73c88a5d7ef9c4cbc7ab"),
    '6': ObjectId("63ac73c88a5d7ef9c4cbc7ac"),
    '7': ObjectId("63ac73c88a5d7ef9c4cbc7ad"),
    '8': ObjectId("63ac73c88a5d7ef9c4cbc7ae"),
    '9': ObjectId("63ac73c88a5d7ef9c4cbc7af")
    }
}

ecommerce> db.productos.insertMany([{productName: "Pizzeta30", productPrice: 3300, productPhoto: ""}, {productName: "Pizzeta15", productPrice: 1800, productPhoto: ""}, {productName: "Chivitop2", productPrice: 4800, productPhoto: ""}, {productName: "Chivitop1", productPrice: 2800, productPhoto: ""}, {productName: "Milanesap2", productPrice: 4300, productPhoto: ""}, {productName: "Milanesa", productPrice: 2900, productPhoto: ""}, {productName: "Coca-cola", productPrice: 300, productPhoto: ""}, {productName: "Cerveza", productPrice: 1000, productPhoto: ""}, {productName: "Empanada", productPrice: 1200, productPhoto: ""}, {productName: "Gramajo", productPrice: 3100, productPhoto: ""}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("63ac7c04d2fd5580bfb771f9"),
    '1': ObjectId("63ac7c04d2fd5580bfb771fa"),
    '2': ObjectId("63ac7c04d2fd5580bfb771fb"),
    '3': ObjectId("63ac7c04d2fd5580bfb771fc"),
    '4': ObjectId("63ac7c04d2fd5580bfb771fd"),
    '5': ObjectId("63ac7c04d2fd5580bfb771fe"),
    '6': ObjectId("63ac7c04d2fd5580bfb771ff"),
    '7': ObjectId("63ac7c04d2fd5580bfb77200"),
    '8': ObjectId("63ac7c04d2fd5580bfb77201"),
    '9': ObjectId("63ac7c04d2fd5580bfb77202")
  }
}

commerce> db.mensajes.find()
[
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7a6"),
    user: 'Juanja@gmail.com',
    message: 'Hola!!'
  },
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7a7"),
    user: 'marthagonzalez3@hotmail.com',
    message: 'Hola Juan!'
  },
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7a8"),
    user: 'martina1524@gmail.com',
    message: 'C칩mo est치n chicos?'
  },
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7a9"),
    user: 'PedroAB43@gmail.com',
    message: 'Buenasss'
  },
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7aa"),
    user: 'marthagonzales3@hotmail.com',
    message: 'yo bien de bien'
  },
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7ab"),
    user: 'Juanja@gmail.com',
    message: 'bien, terminando un trabajo, vos?'
  },
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7ac"),
    user: 'martina1524@gmail.com',
    message: 'me alegro!, yo estoy media estresada con los examenes'
  },
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7ad"),
    user: 'PedroAB43@gmail.com',
    message: 'son muy complicados?'
  },
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7ae"),
    user: 'marthagonzales30@hotmail.com',
    message: 'te va a ir bien, ya vas a ver!'
  },
  {
    _id: ObjectId("63ac73c88a5d7ef9c4cbc7af"),
    user: 'Juanja@gmail.com',
    message: 'Suerte!!'
  }
]

db.productos.find()
[
  {
    _id: ObjectId("63ac7c04d2fd5580bfb771f9"),
    productName: 'Pizzeta30',
    productPrice: '3300',
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac7c04d2fd5580bfb771fa"),
    productName: 'Pizzeta15',
    productPrice: '1800',
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac7c04d2fd5580bfb771fb"),
    productName: 'Chivitop2',
    productPrice: '4800',
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac7c04d2fd5580bfb771fc"),
    productName: 'Chivitop1',
    productPrice: '2800',
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac7c04d2fd5580bfb771fd"),
    productName: 'Milanesap2',
    productPrice: '4300',
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac7c04d2fd5580bfb771fe"),
    productName: 'Milanesa',
    productPrice: '2900',
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac7c04d2fd5580bfb771ff"),
    productName: 'Coca-cola',
    productPrice: '300',
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac7c04d2fd5580bfb77200"),
    productName: 'Cerveza',
    productPrice: '1000',
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac7c04d2fd5580bfb77201"),
    productName: 'Empanada',
    productPrice: '1200',
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac7c04d2fd5580bfb77202"),
    productName: 'Gramajo',
    productPrice: '3100',
    productPhoto: ''
  }
]
ecommerce> db.mensajes.count()
DeprecationWarning: Collection.count() is deprecated. Use countDocuments or estimatedDocumentCount.
10
ecommerce> db.productos.countDocuments()
10
ecommerce> db.productos.insertOne({productName: "Fanta", productPrice: 280, ProductPhoto: ""})
{
  acknowledged: true,
  insertedId: ObjectId("63ac8657ff642ee312a9f41d")
}

ecommerce> db.productos.find({productPrice:{$lt: 1000}})
[
  {
    _id: ObjectId("63ac85a3ff642ee312a9f419"),
    productName: 'Coca-cola',
    productPrice: 300,
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac8657ff642ee312a9f41d"),
    productName: 'Fanta',
    productPrice: 280,
    ProductPhoto: ''
  }
]

ecommerce> db.productos.find({productPrice:{$gte: 1000, $lte: 3000}})
[
  {
    _id: ObjectId("63ac85a3ff642ee312a9f414"),
    productName: 'Pizzeta15',
    productPrice: 1800,
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f416"),
    productName: 'Chivitop1',
    productPrice: 2800,
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f418"),
    productName: 'Milanesa',
    productPrice: 2900,
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f41a"),
    productName: 'Cerveza',
    productPrice: 1000,
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f41b"),
    productName: 'Empanada',
    productPrice: 1200,
    productPhoto: ''
  }
]

ecommerce> db.productos.find({productPrice:{$gt: 3000}})
[
  {
    _id: ObjectId("63ac85a3ff642ee312a9f413"),
    productName: 'Pizzeta30',
    productPrice: 3300,
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f415"),
    productName: 'Chivitop2',
    productPrice: 4800,
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f417"),
    productName: 'Milanesap2',
    productPrice: 4300,
    productPhoto: ''
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f41c"),
    productName: 'Gramajo',
    productPrice: 3100,
    productPhoto: ''
  }
]

ecommerce> db.productos.find().sort({productPrice: 1}).skip(2).limit(1)
[
  {
    _id: ObjectId("63ac85a3ff642ee312a9f41a"),
    productName: 'Cerveza',
    productPrice: 1000,
    productPhoto: ''
  }
]

ecommerce> db.productos.update({}, {$set:{stock:100}}, {multi: true})
DeprecationWarning: Collection.update() is deprecated. Use updateOne, updateMany, or bulkWrite.
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 11,
  modifiedCount: 11,
  upsertedCount: 0
}

ecommerce> db.productos.updateMany({productPrice: {$gt: 4000}}, {$set: {stock: 0}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 2,
  modifiedCount: 2,
  upsertedCount: 0
}

ecommerce> db.productos.deleteMany({productPrice:{$lt: 1000}})
{ acknowledged: true, deletedCount: 2 }

ecommerce> db.productos.find()
[
  {
    _id: ObjectId("63ac85a3ff642ee312a9f413"),
    productName: 'Pizzeta30',
    productPrice: 3300,
    productPhoto: '',
    stock: 100
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f414"),
    productName: 'Pizzeta15',
    productPrice: 1800,
    productPhoto: '',
    stock: 100
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f415"),
    productName: 'Chivitop2',
    productPrice: 4800,
    productPhoto: '',
    stock: 0
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f416"),
    productName: 'Chivitop1',
    productPrice: 2800,
    productPhoto: '',
    stock: 100
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f417"),
    productName: 'Milanesap2',
    productPrice: 4300,
    productPhoto: '',
    stock: 0
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f418"),
    productName: 'Milanesa',
    productPrice: 2900,
    productPhoto: '',
    stock: 100
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f41a"),
    productName: 'Cerveza',
    productPrice: 1000,
    productPhoto: '',
    stock: 100
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f41b"),
    productName: 'Empanada',
    productPrice: 1200,
    productPhoto: '',
    stock: 100
  },
  {
    _id: ObjectId("63ac85a3ff642ee312a9f41c"),
    productName: 'Gramajo',
    productPrice: 3100,
    productPhoto: '',
    stock: 100
  }
]

ecommerce> use admin
switched to db admin
admin> db.createUser({user: "pepe", pwd: "asd456", roles: [{role: "read", db: "ecommerce"}]})
{ ok: 1 }

mongosh -u pepe -p "asd456"

Current Mongosh Log ID: 63acaa8a0047a07093f9385c
Connecting to:          mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.1
Using MongoDB:          6.0.3
Using Mongosh:          1.6.1

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

test> show dbs
ecommerce  144.00 KiB

test> use ecommerce
switched to db ecommerce

ecommerce> db.productos.insertOne({productName:"papas", productPrice: 100, productPhoto: "" })

MongoServerError: not authorized on ecommerce to execute command { insert: "productos", documents: [ { productName: "papas", productPrice: 100, productPhoto: "", _id: ObjectId('63acab0a87982e163ab40ceb') } ], ordered: true, lsid: { id: UUID("f5a19836-384f-4182-bc4f-92569ef4e911") }, $db: "ecommerce" }
ecommerce> 




